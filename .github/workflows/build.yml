name: CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build-type: [debug]

        include:

        - os: ubuntu-latest
          build-type: debug
          toolchain: {compiler: gcc, version: '12', mkl_version: '2024.1', build: fpm}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Install LAPACK (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y liblapack-dev

      - name: Install fpm
        uses: fortran-lang/setup-fpm@v7  # fpm 0.11.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Prepare for cache restore
        run: |
          sudo mkdir -p /opt/intel
          sudo chown $USER /opt/intel
 
      - name: Cache Intel installation
        if: ${{ contains(matrix.toolchain.compiler, 'intel') || matrix.toolchain.build == 'fpm' }}
        id: cache-install
        uses: actions/cache@v4
        with:
          path: /opt/intel/oneapi
          key: install-${{ matrix.toolchain.compiler }}-${{ matrix.toolchain.version }}-${{ matrix.toolchain.mkl_version }}-${{ matrix.os }}

      - name: Install GCC Compiler
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Install Intel Compiler (Linux)
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Install Intel MKL (gcc, fpm)
        if: ${{ contains(matrix.os, 'ubuntu') && contains(matrix.toolchain.compiler, 'gcc') && matrix.toolchain.build == 'fpm' }}
        run: |
          sudo apt-get install intel-oneapi-mkl-${{ matrix.toolchain.mkl_version }} intel-oneapi-mkl-devel-${{ matrix.toolchain.mkl_version }}
      # - name: Intel Apt repository
      #   timeout-minutes: 1
      #   run: |
      #     wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
      #     sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
      #     rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
      #     echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
      #     sudo apt-get update

      # - name: Install Intel MPI and MKL
      #   timeout-minutes: 5
      #   run: |
      #     sudo apt-get install intel-oneapi-mkl intel-oneapi-mkl-devel

      - name: Setup Intel oneAPI environment
        run: |
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV

      - name: Setup environment for Fortran and C compilers
        run: |
            FC="gfortran"
            CC="gcc"
            CXX="g++"
            echo "FC=$FC" >> $GITHUB_ENV
            echo "CC=$CC" >> $GITHUB_ENV
            echo "CXX=$CXX" >> $GITHUB_ENV

      - name: Build library (fpm)
        run: |
          export LD_LIBRARY_PATH=/opt/intel/oneapi/mkl/latest/lib/intel64:$LD_LIBRARY_PATH
          export LIBRARY_PATH=/opt/intel/oneapi/mkl/latest/lib/intel64:$LIBRARY_PATH
          export FPM_CXXFLAGS=-DW_MKL
          export CPATH=/opt/intel/oneapi/mkl/latest/include:$CPATH
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$LIBRARY_PATH" >> $GITHUB_ENV
          echo "FPM_CXXFLAGS=$FPM_CXXFLAGS" >> $GITHUB_ENV
          echo "CPATH=$CPATH" >> $GITHUB_ENV
          fpm --version
          fpm build

      - name: Run unit tests (fpm)
        run: fpm test